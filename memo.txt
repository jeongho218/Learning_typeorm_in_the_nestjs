섹션 7 
프로젝트 3 : 백엔드의 꽃 SQL / TypeORM in the Nest (보너스 섹션)

- 프로젝트 셋업 with typeorm-in-the-nest (new)
```
블로그 API를 만들 예정

인스타그램이나 쇼핑몰과 같은 이커머스 플랫폼도 
블로그에 추가적인 기술을 덧붙인 것이므로
블로그 실습 먼저 할 것임

보일러플레이트는 어떤 프로젝트에서 가장 기초가 되는 코드들,
아직 완성되지 않은, 절반 정도 만들어진 프로젝트를 말한다.

코드 설명 다 할거니까 일단 듣자
```


- PostgreSQL 셋업 (with docker) & TypeORM과 연결
```
도커는 컨테이너 격리 기술을 제공해주는 소프트웨어
도커 사용이 어렵다면 그냥 aws rds 사용해도 된다

postgresql도 사용이 어렵다면 mysql 사용해도 무방하다
강사 개인적으로 토이 프로젝트나 신규 프로젝트 할 때는
mysql보다 postgresql이 조금 더 괜찮다고 생각해서 사용하는 것 뿐이다

pgadmin은 mysql의 workbench같은 postgresql의 관리툴

프로젝트 실행
$ npm run start:dev

postgresql DB가 연결은 된 것 같지만
현재 postgresql의 버전은 pgadmin이 지원하지 않는 버전이라
DB의 내용을 볼 수가 없음

대신 VSC의 확장프로그램 PostgreSQL Explorer를 설치했으니
DB를 확인하고 싶다면 이걸 사용할 것

API가 회원가입, 로그인, 회원정보 가져오기, 로그아웃이 있는 것을 확인함
swagger도 설치해야할 것 같음

JWT 사용해서 로그인하고 있으니 나중에 참조하기 좋을 것 같음

현재 사용자가 admin인지 아닌지는
user 엔터티에서 boolean 타입의 isAdmin 컬럼을 사용해서 저장하고 있음
왜 전에는 이 방법을 떠올리지 못했을까
이것도 나중에 사용해봐야지

postgresql explorer - ctrs 우클릭
New Query 하면 쿼리문 보낼 수 있음
사용법 예시 
select * from public."USER"

```


- 보일러플레이트 코드 리뷰 및 테스팅 소개
```
swagger - http://localhost:5000/docs/
접속에 필요한 계정과 패스워드는 .env에 작성
```


- TDD 소개 및 통합 테스팅
```

```


- [보충] 보일러플레이트 코드 업데이트
```

```


- 요구사항에 맞는 도메인 설계, ERD 모델링에 대하여
```

```


- 엔티티간에 관계에 대하여
```

```
